//go:build !js
// +build !js

// Code generated by Bhojpur GUI - Foundation Framework (go run gen.go); DO NOT EDIT.
package async

import (
	gui "github.com/bhojpur/gui/pkg/engine"
	"sync/atomic"
	"unsafe"
)

// CanvasObjectQueue implements lock-free FIFO freelist based queue.
//
// Reference: https://dl.acm.org/citation.cfm?doid=248052.248106
type CanvasObjectQueue struct {
	head unsafe.Pointer
	tail unsafe.Pointer
	len  uint64
}

// NewCanvasObjectQueue returns a queue for caching values.
func NewCanvasObjectQueue() *CanvasObjectQueue {
	head := &itemCanvasObject{next: nil, v: nil}
	return &CanvasObjectQueue{
		tail: unsafe.Pointer(head),
		head: unsafe.Pointer(head),
	}
}

type itemCanvasObject struct {
	next unsafe.Pointer
	v    gui.CanvasObject
}

func loadCanvasObjectItem(p *unsafe.Pointer) *itemCanvasObject {
	return (*itemCanvasObject)(atomic.LoadPointer(p))
}
func casCanvasObjectItem(p *unsafe.Pointer, old, new *itemCanvasObject) bool {
	return atomic.CompareAndSwapPointer(p, unsafe.Pointer(old), unsafe.Pointer(new))
}
